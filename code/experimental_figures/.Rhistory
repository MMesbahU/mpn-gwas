ROSE$callout[241] = "italic('GFI1B(241')"
p1 <- ggplot(ROSE, aes(x=enhancerRank, y=signal)) +
geom_hline(yintercept = super.threshold,colour="grey", linetype = "longdash") +
geom_point(data=ROSE,color = "#5E4FA2",size=1)  + # find pretty color: jdb_palette("brewer_spectra")[c(1,8)]
geom_point(data=ROSE[241,],aes(x=enhancerRank, y=signal),color='#DC494C',size=5) +
scale_x_reverse() + theme_bw() + scale_y_continuous(labels = comma) +
labs(x = "Enhancer Ranking (23288)") +labs(y = "H3K27ac Signal") +
pretty_plot(fontsize = 15) + L_border() +
geom_text(data=ROSE,label=ROSE$callout, hjust=1.2, size=5) +
theme(axis.text = element_text(size = 12), aspect.ratio=1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
p1
ROSE$callout[241] = "GFI1B(241)"
p1 <- ggplot(ROSE, aes(x=enhancerRank, y=signal)) +
geom_hline(yintercept = super.threshold,colour="grey", linetype = "longdash") +
geom_point(data=ROSE,color = "#5E4FA2",size=1)  + # find pretty color: jdb_palette("brewer_spectra")[c(1,8)]
geom_point(data=ROSE[241,],aes(x=enhancerRank, y=signal),color='#DC494C',size=5) +
scale_x_reverse() + theme_bw() + scale_y_continuous(labels = comma) +
labs(x = "Enhancer Ranking (23288)") +labs(y = "H3K27ac Signal") +
pretty_plot(fontsize = 15) + L_border() +
geom_text(data=ROSE,label=ROSE$callout, hjust=1.2, size=5,aes(fontface=3)) +
theme(axis.text = element_text(size = 12), aspect.ratio=1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
p1
library(data.table)
library(tidyverse)
library(BuenColors)
library(cowplot)
#GEMM" stands for granulocyte, erythrocyte, monocyte, megakaryocyte
cfu_color_maps <- ejc_color_maps[c("Ery","GMP-C","Mono","GMP-A","CMP")]
names(cfu_color_maps) <- c("BFU-E","CFU-G","CFU-M","CFU-GM","CFU-GEMM")
# Read in CFU results
cfu2 <- readxl::read_xlsx("../../data/experimental_data/CFU_assays/Exp2_Day14_primary_CFU-C.xlsx") %>%
filter(Sample != "Mock") %>% mutate(Replicate = paste0("exp2_",Replicate))
cfu3 <- readxl::read_xlsx("../../data/experimental_data/CFU_assays/Exp3_CFU-C.xlsx") %>%
filter(Sample != "Mock") %>% mutate(Replicate = paste0("exp3_",Replicate))
# Combine data from different experiments
cfu <- bind_rows(cfu2,cfu3)
melted <- cfu %>% pivot_longer(-c(Sample,Plating,Replicate),names_to="type",values_to="count")
combined <- melted %>% group_by(Sample,Plating,type) %>% summarise(mean=mean(count),se=sd(count)/sqrt(n()))
combined$Sample <- factor(combined$Sample,levels=c("NT","CDS_g1","CDS_g2"))
combined$type <- factor(combined$type,levels=rev(unique(combined$type)))
errors <- combined %>% group_by(Sample,Plating) %>% mutate(pos = cumsum(mean),  upper = pos + se,  lower = pos - se)
totals <- melted %>% group_by(Sample,Plating,Replicate) %>% summarise(total = sum(count))
p1 <- ggplot(combined,aes(x=Sample,y=mean)) +
geom_bar(aes(fill = type),color="black", stat="identity") +
geom_errorbar(data=errors,aes(ymax=upper,  ymin=lower), width=0.15) +
geom_jitter(data=totals,aes(x=Sample,y=total),color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,3,5,7,9)]) +
pretty_plot(fontsize = 8) + L_border() +
labs(x="",y="No. of colonies") +
facet_wrap(~Plating) +
theme(legend.title=element_blank(),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(expand=c(0,0))
p1
cowplot::ggsave2(p1, file="../../output/experimental_plots/cfu_assays/gfi1b_cfu_combined.pdf",height=2,width=3)
cowplot::ggsave2(p1, file="../../output/experimental_plots/cfu_assays/gfi1b_cfu_combined.pdf",height=2,width=3)
library(tidyverse)
library(data.table)
library(DNAshapeR)
library(BSgenome.Hsapiens.UCSC.hg19)
library(preprocessCore)
library(matrixStats)
library(seqinr)
# Variants of interest
# PODXL: 7:130742066_A_G	rs7803075
# MECOM: 3:168822748_G_T rs13327022
# FOXO1: 13:41204015_T_C	rs7323267
# TERT: 5:1138335_T_G	rs4131149
# RUNX1: 21:36351891_T_C	rs2834712
vars <- c("rs7803075","rs13327022","rs7323267","rs4131149","rs2834712")
# Import CS
CS.df <- fread("../data/abf_finemap/MPN_CML_abf_cojo_95CS.bed")
# 500bp peaks/counts
peaksdf <- fread("../data/atac/29August2017_EJCsamples_allReads_500bp.bed")
peaks <- makeGRangesFromDataFrame(peaksdf, seqnames = "V1", start.field = "V2", end.field = "V3")
counts.df <-  data.matrix(fread("../data/atac/29August2017_EJCsamples_allReads_500bp.counts.txt"))
# Log2 cpm normalize
cpm <- round(sweep(counts.df, 2, colSums(counts.df), FUN="/") * 1000000, 1)
log2cpm <- log2(cpm+1)
# Min / max scale
log2cpm.minmax <- log2cpm / rowMax(log2cpm)
# Select for myeloid populations
myeloid.counts <- as.data.frame(log2cpm) %>%
dplyr::select("HSC", "MPP", "CMP", "MEP", "Ery","Mega") %>% as.matrix()
luc <- CS.df %>% filter(rsid %in% vars) %>% mutate(pos = start)
luc$alt <- str_split_fixed(luc$var,"_",3)[,3]
# Overlap
idx <- findOverlaps(peaks,GRanges(luc))
fm.counts <- myeloid.counts[idx@from,]
# Construct mega data.frame with peaks, cpm, and finemap info
mega_df <- data.frame(
luc[idx@to,c("var","rsid","region","PP","pvalue","region_rank","pos","alt")],
peaks[idx@from],
myeloid.counts[idx@from,]
) %>% dplyr::select(-strand,-width) %>% unique()
mega_df$dist <- mega_df$pos - mega_df$start +1
# Create own GRanges file
# 7:130741947-130742264
# 3:168822674-168822855
# 13:41203850-41204167
# 5:1138148-1138578
# 21:36351658-36352066
luc_seqs <- data.frame(
var=c("7:130742066_A_G","3:168822748_G_T","13:41204015_T_C","5:1138335_T_G","21:36351891_T_C"),
seqnames = paste0("chr",c(7,3,13,5,21)),
start=c(130741947,168822674,41203850,1138148,36351658),
end=c(130742264,168822855,41204167,1138578,36352066)
)
# Plot GFI1B fasta
luc_seqs <- data.frame(
var=c("9:135870130_C_G"),
seqnames = paste0("chr",c(9)),
start=c(135870130-50),
end=c(135870130+50)
)
luc_seqs$pos <- as.integer(gsub("_.*","",str_split_fixed(luc_seqs$var,":",2)[,2]))
luc_seqs$alt <- str_split_fixed(luc_seqs$var,"_",3)[,3]
luc_seqs$dist <- luc_seqs$pos - luc_seqs$start +1
GRanges(luc_seqs)
alt_seq <- ref_seq <- getSeq(BSgenome.Hsapiens.UCSC.hg19,GRanges(luc_seqs),as.character=TRUE)
write.fasta(as.list(ref_seq),paste0(luc_seqs$var,"_ref"),file.out="../output/luciferase_sequences/luc_variant_sequences.fa")
# Modify one variant in alternate sequence
sapply(seq(1,length(alt_seq)),function(y){
dist <- luc_seqs$dist[y]
alt <-  luc_seqs$alt[y]
substring(alt_seq[y], dist, dist) <- alt
return(alt_seq[y])
}) -> alt_seq_changed
write.fasta(as.list(alt_seq_changed),paste0(luc_seqs$var,"_alt"),open="a",
file.out="../output/luciferase_sequences/luc_variant_sequences.fa")
write.fasta(as.list(ref_seq),paste0(luc_seqs$var,"_ref"),file.out="../output/luciferase_sequences/luc_variant_sequences.fa")
write.fasta(as.list(ref_seq),paste0(luc_seqs$var,"_ref"),file.out="../../output/luciferase_sequences/luc_variant_sequences.fa")
# Modify one variant in alternate sequence
sapply(seq(1,length(alt_seq)),function(y){
dist <- luc_seqs$dist[y]
alt <-  luc_seqs$alt[y]
substring(alt_seq[y], dist, dist) <- alt
return(alt_seq[y])
}) -> alt_seq_changed
write.fasta(as.list(alt_seq_changed),paste0(luc_seqs$var,"_alt"),open="a",
file.out="../../output/luciferase_sequences/luc_variant_sequences.fa")
library(tidyverse)
library(data.table)
library(DNAshapeR)
library(BSgenome.Hsapiens.UCSC.hg19)
library(preprocessCore)
library(matrixStats)
library(seqinr)
# Variants of interest
# PODXL: 7:130742066_A_G	rs7803075
# MECOM: 3:168822748_G_T rs13327022
# FOXO1: 13:41204015_T_C	rs7323267
# TERT: 5:1138335_T_G	rs4131149
# RUNX1: 21:36351891_T_C	rs2834712
vars <- c("rs7803075","rs13327022","rs7323267","rs4131149","rs2834712")
# Import CS
CS.df <- fread("../data/abf_finemap/MPN_CML_abf_cojo_95CS.bed")
# 500bp peaks/counts
peaksdf <- fread("../data/atac/29August2017_EJCsamples_allReads_500bp.bed")
peaks <- makeGRangesFromDataFrame(peaksdf, seqnames = "V1", start.field = "V2", end.field = "V3")
counts.df <-  data.matrix(fread("../data/atac/29August2017_EJCsamples_allReads_500bp.counts.txt"))
# Log2 cpm normalize
cpm <- round(sweep(counts.df, 2, colSums(counts.df), FUN="/") * 1000000, 1)
log2cpm <- log2(cpm+1)
# Min / max scale
log2cpm.minmax <- log2cpm / rowMax(log2cpm)
# Select for myeloid populations
myeloid.counts <- as.data.frame(log2cpm) %>%
dplyr::select("HSC", "MPP", "CMP", "MEP", "Ery","Mega") %>% as.matrix()
luc <- CS.df %>% filter(rsid %in% vars) %>% mutate(pos = start)
luc$alt <- str_split_fixed(luc$var,"_",3)[,3]
# Overlap
idx <- findOverlaps(peaks,GRanges(luc))
fm.counts <- myeloid.counts[idx@from,]
# Construct mega data.frame with peaks, cpm, and finemap info
mega_df <- data.frame(
luc[idx@to,c("var","rsid","region","PP","pvalue","region_rank","pos","alt")],
peaks[idx@from],
myeloid.counts[idx@from,]
) %>% dplyr::select(-strand,-width) %>% unique()
mega_df$dist <- mega_df$pos - mega_df$start +1
# Create own GRanges file
# 7:130741947-130742264
# 3:168822674-168822855
# 13:41203850-41204167
# 5:1138148-1138578
# 21:36351658-36352066
luc_seqs <- data.frame(
var=c("7:130742066_A_G","3:168822748_G_T","13:41204015_T_C","5:1138335_T_G","21:36351891_T_C"),
seqnames = paste0("chr",c(7,3,13,5,21)),
start=c(130741947,168822674,41203850,1138148,36351658),
end=c(130742264,168822855,41204167,1138578,36352066)
)
# Plot GFI1B fasta
luc_seqs <- data.frame(
var=c("9:135870130_C_G"),
seqnames = paste0("chr",c(9)),
start=c(135870130-50),
end=c(135870130+50)
)
luc_seqs$pos <- as.integer(gsub("_.*","",str_split_fixed(luc_seqs$var,":",2)[,2]))
luc_seqs$alt <- str_split_fixed(luc_seqs$var,"_",3)[,3]
luc_seqs$dist <- luc_seqs$pos - luc_seqs$start +1
GRanges(luc_seqs)
alt_seq <- ref_seq <- getSeq(BSgenome.Hsapiens.UCSC.hg19,GRanges(luc_seqs),as.character=TRUE)
write.fasta(as.list(ref_seq),paste0(luc_seqs$var,"_ref"),file.out="../../output/luciferase_sequences/luc_variant_sequences.fa")
# Modify one variant in alternate sequence
sapply(seq(1,length(alt_seq)),function(y){
dist <- luc_seqs$dist[y]
alt <-  luc_seqs$alt[y]
substring(alt_seq[y], dist, dist) <- alt
return(alt_seq[y])
}) -> alt_seq_changed
write.fasta(as.list(alt_seq_changed),paste0(luc_seqs$var,"_alt"),open="a",
file.out="../../output/luciferase_sequences/luc_variant_sequences.fa")
luc_seqs <- data.frame(
var=c("7:130742066_A_G","3:168822748_G_T","13:41204015_T_C","5:1138335_T_G","21:36351891_T_C"),
seqnames = paste0("chr",c(7,3,13,5,21)),
start=c(130741947,168822674,41203850,1138148,36351658),
end=c(130742264,168822855,41204167,1138578,36352066)
)
# Plot GFI1B fasta
luc_seqs <- data.frame(
var=c("9:135870130_C_G"),
seqnames = paste0("chr",c(9)),
start=c(135870130-50),
end=c(135870130+50)
)
luc_seqs$pos <- as.integer(gsub("_.*","",str_split_fixed(luc_seqs$var,":",2)[,2]))
luc_seqs$alt <- str_split_fixed(luc_seqs$var,"_",3)[,3]
luc_seqs$dist <- luc_seqs$pos - luc_seqs$start +1
GRanges(luc_seqs)
luc_seqs
luc_seqs <- data.frame(
var=c("7:130742066_A_G","3:168822748_G_T","13:41204015_T_C","5:1138335_T_G","21:36351891_T_C"),
seqnames = paste0("chr",c(7,3,13,5,21)),
start=c(130741947,168822674,41203850,1138148,36351658),
end=c(130742264,168822855,41204167,1138578,36352066)
)
luc_seqs
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
# Read in reporter results
tet2 <- fread("../../data/experimental_data/reporter_assays/TET2_reporter_results.txt") %>%
dplyr::rename(sd="S.D") %>% mutate(sem = sd / (sqrt(3))) %>%
dplyr::rename(mean="Average",type="Sample")
tet2$type <- factor(tet2$type, levels=c("MinP","nonrisk","risk"))
gfi1b <- fread("../../data/experimental_data/reporter_assays/GFI1B_reporter_results.txt")
gfi1b$type <- factor(gfi1b$type, levels=c("MinP","nonrisk","risk"))
plot_and_save <- function(reporters,name){
# Plot
p1 <- ggplot(reporters,aes(x=type,y=activity,fill=type))+
geom_bar(position=position_identity(), stat="summary",fun.y="mean", color = "black", width = 0.7) +
geom_errorbar(stat = 'summary', fun.data="mean_se",
width=0.3, position=position_dodge(.9)) +
geom_jitter(color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(6,1,8)]) +
labs(x="",y="Relative luciferase activity") +
pretty_plot(fontsize=8) + L_border() +
scale_y_continuous(expand = c(0, 0))+
theme(legend.position = "none")
cowplot::ggsave2(p1,file=paste0("../../output/experimental_plots/luciferase_assays/reporter_plots/reporter_barplot_",name,".pdf"),
height=1.5,width=1.5)
return(p1)
}
plot_and_save(gfi1b,"GFI1B")
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
# Read in reporter results
tet2 <- fread("../../data/experimental_data/reporter_assays/TET2_reporter_results.txt") %>%
dplyr::rename(sd="S.D") %>% mutate(sem = sd / (sqrt(3))) %>%
dplyr::rename(mean="Average",type="Sample")
tet2$type <- factor(tet2$type, levels=c("MinP","nonrisk","risk"))
gfi1b <- fread("../../data/experimental_data/reporter_assays/GFI1B_reporter_results.txt")
gfi1b$type <- factor(gfi1b$type, levels=c("MinP","nonrisk","risk"))
plot_and_save <- function(reporters,name){
# Plot
p1 <- ggplot(reporters,aes(x=type,y=activity,fill=type))+
geom_bar(position=position_identity(), stat="summary",fun.y="mean", color = "black", width = 0.7) +
geom_errorbar(stat = 'summary', fun.data="mean_se",
width=0.3, position=position_dodge(.9)) +
geom_jitter(color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(6,1,8)]) +
labs(x="",y="Relative luciferase activity") +
pretty_plot(fontsize=8) + L_border() +
scale_y_continuous(expand = c(0, 0))+
theme(legend.position = "none")
cowplot::ggsave2(p1,file=paste0("../../output/experimental_plots/luciferase_assays/reporter_plots/reporter_barplot_",name,".pdf"),
height=1.5,width=1.5)
return(p1)
}
plot_and_save(gfi1b,"GFI1B")
plot_and_save(tet2,"TET2")
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
# Read in reporter results
tet2 <- fread("../../data/experimental_data/reporter_assays/TET2_reporter_results.txt") %>%
dplyr::rename(sd="S.D") %>% mutate(sem = sd / (sqrt(3))) %>%
dplyr::rename(mean="Average",type="Sample")
tet2$type <- factor(tet2$type, levels=c("MinP","nonrisk","risk"))
gfi1b <- fread("../../data/experimental_data/reporter_assays/GFI1B_reporter_results.txt")
gfi1b$type <- factor(gfi1b$type, levels=c("MinP","nonrisk","risk"))
plot_and_save <- function(reporters,name){
# Plot
p1 <- ggplot(reporters,aes(x=type,y=activity,fill=type))+
geom_bar(position=position_identity(), stat="summary",fun.y="mean", color = "black", width = 0.7) +
geom_errorbar(stat = 'summary', fun.data="mean_se",
width=0.3, position=position_dodge(.9)) +
geom_jitter(color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(6,1,8)]) +
labs(x="",y="Relative luciferase activity") +
pretty_plot(fontsize=8) + L_border() +
scale_y_continuous(expand = c(0, 0))+
theme(legend.position = "none")
cowplot::ggsave2(p1,file=paste0("../../output/experimental_plots/luciferase_assays/reporter_plots/reporter_barplot_",name,".pdf"),
height=1.5,width=1.5)
return(p1)
}
plot_and_save(gfi1b,"GFI1B")
plot_and_save(tet2,"TET2")
plot_and_save(tet2,"TET2")
# Read in reporter results
tet2 <- fread("../../data/experimental_data/reporter_assays/TET2_reporter_results.txt") %>%
dplyr::rename(sd="S.D") %>% mutate(sem = sd / (sqrt(3))) %>%
dplyr::rename(mean="Average",type="Sample")
tet2$type <- factor(tet2$type, levels=c("MinP","nonrisk","risk"))
tet2
gfi1b <- fread("../../data/experimental_data/reporter_assays/GFI1B_reporter_results.txt")
gfi1b$type <- factor(gfi1b$type, levels=c("MinP","nonrisk","risk"))
gfi1b
library(data.table)
library(tidyverse)
library(BuenColors)
library(cowplot)
# Read in IR results
ir <- readxl::read_xlsx("../../data/experimental_data/CHEK2_data/CHEK2i _HSPC_subpopulations_DO_D4.xlsx")
ir$group <- factor(ir$group,levels=c("DMSO","CHEK2_inh"))
ir$celltype <- factor(ir$celltype,levels=c("CMP","GMP","MEP","HSPC"))
p1 <- ggplot(ir,aes(x=celltype,y=count,fill=group))+
geom_bar(position="dodge", stat="summary",fun.y="mean", color = "black") +
geom_errorbar(stat = 'summary', fun.data="mean_se",
width=0.3, position=position_dodge(.9)) +
geom_jitter(position=position_jitterdodge(dodge.width = 0.9,jitter.width = 0.4),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,8)]) +
labs(x="",y="IR-induced cell death (%)") +
pretty_plot(fontsize=8) + L_border() +
scale_y_continuous(expand = c(0, 0.05)) +
theme(legend.position="none")
p1
cowplot::ggsave2(p1, file="../../output/experimental_plots/chek2/chek2_cycling_IR.pdf",height=1.7,width=2)
cowplot::ggsave2(p1, file="../../output/experimental_plots/chek2/chek2_cycling_IR.pdf",height=1.7,width=2)
# Check for significance
sapply(unique(ir$celltype),function(index){
print(index)
subset_a <- ir %>% filter(celltype == index,group == "DMSO") %>% .$count
subset_b <- ir %>% filter(celltype == index,group == "CHEK2_inh") %>% .$count
if (mean(subset_a) == mean(subset_b)){
return("not significant")
} else if (length(subset_a) < 2 | length(subset_b) < 2) {
return("not enough data")
} else{
res <- t.test(subset_a,subset_b,alternative=c("two.sided"),paired = TRUE,
var.equal = FALSE)
return(res$p.value)
}
})
library(data.table)
library(tidyverse)
library(BuenColors)
library(cowplot)
# Read in CFU results
cfu <- readxl::read_xlsx("../../data/experimental_data/CHEK2_data/chek2_inhib_on_CD34+_CFCs.xlsx")
combined <- cfu %>% group_by(Sample,type) %>% summarise(mean=mean(count),se=sd(count)/sqrt(n()))
combined$Sample <- factor(combined$Sample,levels=c("DMSO","CHEK2_inh"))
combined$type <- factor(combined$type,levels=rev(unique(combined$type)))
errors <- combined %>% group_by(Sample) %>% mutate(pos = cumsum(mean),  upper = pos + se,  lower = pos - se)
totals <- cfu %>% group_by(Sample,Experiment) %>% summarise(total = sum(count))
# Total colonies
p1 <- ggplot(combined,aes(x=Sample,y=mean)) +
geom_bar(aes(fill = type),color="black", stat="identity") +
geom_errorbar(data=errors,aes(ymax=upper,  ymin=lower), width=0.15) +
geom_jitter(data=totals,aes(x=Sample,y=total),color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,3,5,7,9)]) +
pretty_plot(fontsize = 8) + L_border() +
labs(x="",y="No. of colonies") +
theme(legend.position = "none") +
scale_y_continuous(expand=c(0,0))
p1
# Percents
combined  <- cfu %>% group_by(Sample,Experiment) %>% mutate(percent = count / sum(count)) %>% ungroup() %>%
group_by(Sample, type) %>%  summarise(mean_percents = mean(percent),se = sd(percent)/n()) %>% ungroup()
combined$Sample <- factor(combined$Sample,levels=c("DMSO","CHEK2_inh"))
combined$type <- factor(combined$type,levels=rev(unique(combined$type)))
errors <- combined %>% group_by(Sample) %>% mutate(pos = cumsum(mean_percents),  upper = pos + se,  lower = pos - se)
p2 <- ggplot(combined,aes(x=Sample,y=mean_percents)) +
geom_bar(aes(fill = type),color="black", stat="identity") +
geom_errorbar(data=errors,aes(ymax=upper,  ymin=lower), width=0.15) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,3,5,7,9)]) +
pretty_plot(fontsize = 8) + L_border() +
labs(x="",y="Proportion of colonies (%)") +
geom_text(aes(label = paste0(100*round(mean_percents,2),"%")),
position = position_stack(vjust = 0.5), size = 3) +
theme(legend.position = "none") +
scale_y_continuous(expand=c(0,0))
p2
cowplot::ggsave2(p1, file="../../output/experimental_plots/chek2/chek2_cfu_counts.pdf",height=2,width=2)
cowplot::ggsave2(p2, file="../../output/experimental_plots/chek2/chek2_cfu_percents.pdf",height=2,width=2)
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
# Read in reporter results
chek2 <- readxl::read_xlsx("../../data/experimental_data/CHEK2_data/shCHK2_expansion_raw_data.xlsx")
chek2$type <- factor(chek2$type, levels=c("shCtr","shCHK2"))
sapply(unique(chek2$day),function(day_index){
print(day_index)
# Group by experiment
if (FALSE){
subset_a <- chek2 %>% filter(day == day_index,type == "shCtr") %>% group_by(experiment) %>% summarise(n_control = mean(count))
subset_b <- chek2 %>% filter(day == day_index,type == "shCHK2") %>% group_by(experiment) %>% summarise(n_shchek2 = mean(count))
merged <- merge(subset_a,subset_b,by="experiment")
merged <- merged[complete.cases(merged),]
subset_a <- merged$n_control
subset_b <- merged$n_shchek2
if (nrow(merged) < 1){ return("not enough data")}
}
subset_a <- chek2 %>% filter(day == day_index,type == "shCtr") %>% .$count
subset_b <- chek2 %>% filter(day == day_index,type == "shCHK2") %>% .$count
if (mean(subset_a) == mean(subset_b)){
return("not significant")
} else if (length(subset_a) < 2 | length(subset_b) < 2) {
return("not enough data")
} else{
res <- wilcox.test(subset_a,subset_b,alternative=c("two.sided"),paired = FALSE,
var.equal = FALSE)
return(res$p.value)
}
})
means <- chek2 %>% group_by(day,type) %>% summarise(mean = mean(count),sem = sd(count)/sqrt(n()))
# Plot
require(scales)
p1 <- ggplot(means,aes(x=day,y=mean,color=type))+
geom_point() + geom_line()+
geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem),width = 3,
position=position_dodge(.9)) +
scale_color_manual(values = jdb_palette("brewer_spectra")[c(1,8)]) +
scale_y_log10(limits = c(0.1,100000),breaks=c(0.1,1,10,100,100,1000,10000,100000),labels=comma)+
labs(x="Days",y="Expansion") +
pretty_plot(fontsize=8) + L_border() +
theme(legend.title = element_blank(),legend.position = "none")
p1
cowplot::ggsave2(p1,file="../../output/experimental_plots/chek2/chek2_expansion.pdf",
height=2,width=2)
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
gfi1b <- fread("../../data/experimental_data/GFI1B_enhancer_assays/GFI1B_super-enhancer_deletion_genotype.txt")
# Calculate mean and sem of each set of replicates
summaries <- gfi1b %>% group_by(Sample,Outcome) %>% summarise(mean = mean(Percentage),se=sd(Percentage)/sqrt(n()))
errors <- summaries %>% group_by(Sample) %>% mutate(pos = cumsum(mean),  upper = pos + se,  lower = pos - se)
errors$Outcome <- factor(errors$Outcome, levels=c("Uncut","Inversion",'Deletion'))
# merge(gfi1b,errors[,c("Sample","Outcome","pos")],by=c("Sample","Outcome"))
# points <- gfi1b %>% group_by(Sample) %>% mutate(pos = cumsum(Percentage))
p1 <- ggplot(errors,aes(x=Sample,y=mean)) +
geom_bar(aes(fill = Outcome),color="black", stat="identity",width= 0.7) +
geom_errorbar(data=errors,aes(ymax=upper,  ymin=lower), width=0.15) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,3,5,7,9)]) +
pretty_plot(fontsize = 8) + L_border() +
labs(x="",y="Editing Outcome (%)") +
theme(legend.title=element_blank(),legend.position="none") +
scale_y_continuous(expand=c(0,0))
p1
cowplot::ggsave2(p1, file="../../output/experimental_plots/gfi1b_enhancer_assays/gfi1b_superenhancer_deletion_genotypes.pdf",
height=1.5,width=1.5)
cowplot::ggsave2(p1, file="../../output/experimental_plots/gfi1b_enhancer_assays/gfi1b_superenhancer_deletion_genotypes.pdf",
height=1.5,width=1.5)
cowplot::ggsave2(p1, file="../../output/experimental_plots/gfi1b_enhancer_assays/gfi1b_superenhancer_deletion_genotypes.pdf",
height=1.5,width=1.5)
library(tidyverse)
library(data.table)
library(cowplot)
library(BuenColors)
gfi1b <- readxl::read_xlsx("../../data/experimental_data/GFI1B_enhancer_assays/gfi1b_SE_D_repeatEXP_gene_expression_day7.xlsx")
gfi1b[,c("group","experiment","replicate")] <- str_split_fixed(gfi1b$Sample, "_",3)
gfi1b <- gfi1b  %>% group_by(group,experiment) %>% summarise(mean=mean(FC),se=sd(FC)/sqrt(n()))
gfi1b$group <- factor(gfi1b$group, levels=c("AAVS","G47","G48"))
gfi1b <- gfi1b %>% filter(group %in% c("AAVS","G48"))
p1 <- ggplot(gfi1b,aes(x=group,y=mean,fill=group))+
geom_bar(position=position_identity(), stat="summary",fun.y="mean", color = "black",width = 0.7) +
geom_errorbar(stat = 'summary', fun.data="mean_se",
width=0.3, position=position_dodge(.9)) +
geom_jitter(color="black",position = position_jitter(width = .2),size=0.8) +
scale_fill_manual(values = jdb_palette("brewer_spectra")[c(1,8)]) +
labs(x="",y="Relative GFI1B expression") +
pretty_plot(fontsize=8) + L_border() +
scale_y_continuous(expand = c(0, 0))+
theme(legend.position = "none")
p1
cowplot::ggsave2(p1,file="../../output/experimental_plots/gfi1b_enhancer_assays/gfi1b_superenhancer_deletion_expression.pdf",
height=1.5,width=1.5)
